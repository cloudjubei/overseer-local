{
  "id": "46cb9c12-219f-491c-b881-68bd417c508d",
  "status": "-",
  "title": "Store app usage user preferences",
  "description": "Following setting storing, we want to store the last project active, the configuration active for tasks (i.e. list vs board), if it was list - then which sorting was used.\nEssentially we want the user to resume the app in exactly the same state as they left it.",
  "features": [
    {
      "id": "4aa629d1-91be-4c45-82cc-b210dacab4f4",
      "status": "+",
      "title": "Create user preferences storage service",
      "description": "Create a new service that provides methods to get, set, and persist user preferences. The service should handle storing preferences like last active project, task view mode (list/board), and list view sorting preferences. \nCurrently useNotificationPreferences is already using and storing some system preferences. This should be extracted from there and moved to a new class responsible for all such system-wide settings.",
      "plan": "",
      "context": [
        "src/renderer/hooks/useNotificationPreferences.ts",
        "src/renderer/hooks/useNotifications.ts",
        "src/notifications/manager.js",
        "src/ipcHandlersKeys.js",
        "src/renderer/services/notificationsService.ts",
        "src/preload.js",
        "src/preferences/manager.js",
        "src/preferences/userPreferences.js",
        "src/types/userPreferences.ts"
      ],
      "acceptance": [],
      "dependencies": []
    },
    {
      "id": "d877642c-9e5d-44ca-b100-dbe5a7ad119c",
      "status": "-",
      "title": "Store and restore last active project",
      "description": "Integrate user preferences into the projects system to automatically store the last active project when it changes and restore it on app startup. Update the projects service and relevant components to persist and load the last active project preference.",
      "plan": "",
      "context": [
        "src/renderer/navigation/SidebarView.tsx",
        "src/renderer/screens/SettingsView.tsx",
        "src/preferences/userPreferences.js",
        "src/types/userPreferences.ts",
        "src/preferences/manager.js"
      ],
      "acceptance": [],
      "dependencies": []
    },
    {
      "id": "632d7c0e-6caa-4f11-85a1-73cc4ad378bd",
      "status": "-",
      "title": "Store and restore task view configuration",
      "description": "Integrate user preferences into the tasks view system to store whether the user was in list or board view mode. Update TasksView.tsx and related components to persist the current view mode and restore it when navigating back to tasks or restarting the app.",
      "plan": "",
      "context": [
        "src/renderer/tasks/TasksListView.tsx",
        "src/renderer/screens/TasksView.tsx",
        "src/renderer/tasks/BoardView.tsx"
      ],
      "acceptance": [],
      "dependencies": []
    },
    {
      "id": "3f5d91b8-ec5c-4532-9aed-56ff5dad83b1",
      "status": "-",
      "title": "Store and restore list view sorting preferences",
      "description": "When the user is in list view, store their sorting preferences (sort field and direction). Update TasksListView.tsx to persist sorting state and restore it when returning to list view or restarting the app. Only applicable when in list view mode.",
      "plan": "",
      "context": [
        "src/renderer/tasks/TasksListView.tsx"
      ],
      "acceptance": [],
      "dependencies": []
    },
    {
      "id": "d3c0aaf2-7919-4c1c-a21d-3a079d5c2c23",
      "status": "-",
      "title": "Notifications need to use new userPreferences",
      "description": "Notifications are using their own (old way) of storing preferences - everything that was using the preferences via the useNotifications should use the new way",
      "plan": "",
      "context": [
        "src/preferences/userPreferences.js",
        "src/types/userPreferences.ts",
        "src/preferences/manager.js",
        "src/notifications/manager.js",
        "src/renderer/services/notificationsService.ts",
        "src/renderer/hooks/useNotificationPreferences.ts",
        "src/renderer/hooks/useNotifications.ts"
      ],
      "acceptance": [],
      "dependencies": []
    }
  ],
  "featureIdToDisplayIndex": {
    "4aa629d1-91be-4c45-82cc-b210dacab4f4": 1,
    "d877642c-9e5d-44ca-b100-dbe5a7ad119c": 2,
    "632d7c0e-6caa-4f11-85a1-73cc4ad378bd": 3,
    "3f5d91b8-ec5c-4532-9aed-56ff5dad83b1": 4,
    "d3c0aaf2-7919-4c1c-a21d-3a079d5c2c23": 5
  }
}