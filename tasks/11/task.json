{
  "id": 11,
  "status": "+",
  "title": "Tasks & Feature dependencies",
  "description": "Features should have editable dependencies. When creating or editing a feature it should be easy to browse and select other features as dependencies. If a feature has a dependency from a different task - the task should display these in the TaskDetails as well as in the Tasks list (similarly to how features have it in the TaskDetails).\n\nWhen hovering over a feature dependency bullet (in the TaskDetails) it should show a little summary card of that feature (as a callout) and when clicking on it it should take the user to the TaskDetails where that Feature is and highlight that Feature row.\nWhen hovering over a Task dependency it should behave analogously to the Features but for Tasks.\n\nIt's important to make reusable components for the Task dependency bullet and the Feature dependency bullet, as well as the summary callout cards.\nWhen talking in chat, it must be possible to reference a feature or task by starting to type '#' this should show a Task&Feature dependency selector. Whenever a a task or feature is referenced in the chat in such a way, the dependency bullets should be used with the standard behaviour described before.\n\nVery important - it must be possible to reference any task or feature in the whole project scope - as defined by the project's config.json under /projects.",
  "features": [
    {
      "id": "11.1",
      "status": "+",
      "title": "Add dependency types and data structures",
      "description": "Extend the TypeScript types to support dependencies between features and tasks. Add dependency arrays to Feature and Task types, and create supporting types for dependency references that can point to features or tasks across the entire project scope. Update the data structures to store and validate these cross-references.",
      "plan": "",
      "context": [
        "/docs/tasks/task_format.py",
        "/src/types/tasks.ts"
      ],
      "acceptance": []
    },
    {
      "id": "11.2",
      "status": "+",
      "title": "Create reusable dependency bullet components",
      "description": "Create reusable React components for displaying dependency bullets: FeatureDependencyBullet and TaskDependencyBullet. These should be small, clickable elements that show the dependency type and provide hover states. Include proper styling to match the existing design system and ensure they work in both light and dark themes.",
      "plan": "",
      "context": [
        "/docs/tasks/task_format.py",
        "/src/types/tasks.ts",
        "src/renderer/components/tasks/DependencyBullet.tsx"
      ],
      "acceptance": []
    },
    {
      "id": "11.3",
      "status": "+",
      "title": "Create dependency summary callout cards",
      "description": "Implement summary callout card components that appear on hover over dependency bullets. Create FeatureSummaryCard and TaskSummaryCard that show key information about the referenced feature/task (title, status, brief description). These should be styled as tooltips/popovers and positioned appropriately relative to the trigger element.",
      "plan": "",
      "context": [
        "/docs/tasks/task_format.py",
        "/src/types/tasks.ts",
        "src/renderer/components/tasks/DependencyBullet.tsx"
      ],
      "acceptance": []
    },
    {
      "id": "11.4",
      "status": "+",
      "title": "Implement dependency browsing and selection interface",
      "description": "Create a dependency selector component that allows users to browse and select features and tasks from across the current project when creating or editing features. This should include search/filter capabilities and support for multi-select. The interface should be intuitive and clearly show the hierarchy of projects, tasks, and features.",
      "plan": "",
      "context": [
        "src/renderer/components/FeatureForm.tsx",
        "src/renderer/components/tasks/DependencySelector.tsx",
        "src/renderer/tasks/FeatureCreateView.tsx",
        "src/renderer/tasks/FeatureEditView.tsx",
        "src/renderer/components/tasks/DependencyBullet.tsx"
      ],
      "acceptance": []
    },
    {
      "id": "11.5",
      "status": "+",
      "title": "Add dependency editing to feature creation and editing forms",
      "description": "Integrate the dependency selection interface into the FeatureCreateView and FeatureEditView components. Add form fields and UI for managing dependencies, including the ability to add, remove, and reorder dependencies. Ensure proper validation and user feedback for dependency cycles or invalid references.",
      "plan": "",
      "context": [
        "src/renderer/components/FeatureForm.tsx",
        "src/renderer/components/tasks/DependencySelector.tsx",
        "src/renderer/tasks/FeatureCreateView.tsx",
        "src/renderer/tasks/FeatureEditView.tsx",
        "src/renderer/components/tasks/DependencyBullet.tsx"
      ],
      "acceptance": []
    },
    {
      "id": "11.6",
      "status": "+",
      "title": "Display feature dependencies in TaskDetails",
      "description": "Update the TaskDetailsView to show dependency bullets for each feature that has dependencies. Display both inbound dependencies (features that depend on this one) and outbound dependencies (features this one depends on). Include proper grouping and labeling to make the dependency relationships clear.",
      "plan": "",
      "context": [
        "src/renderer/tasks/TasksDetailsView.tsx",
        "src/renderer/tasks/TasksListView.tsx",
        "src/renderer/components/tasks/DependencyBullet.tsx"
      ],
      "acceptance": []
    },
    {
      "id": "11.7",
      "status": "+",
      "title": "Display task dependencies in TaskDetailsView and TasksListView",
      "description": "When a task has dependencies show these in:\n1) TaskDetails view next to the Status.\n2) TasksListView as a the one but last column.\nBoth should have it presented in the same way as a Feature does in the TaskDetailsView",
      "plan": "",
      "context": [
        "src/types/tasks.ts",
        "src/renderer/tasks/TasksDetailsView.tsx",
        "src/renderer/tasks/TasksListView.tsx",
        "src/renderer/components/tasks/DependencyBullet.tsx",
        "src/renderer/types.ts",
        "src/renderer/services/tasksService.ts",
        "src/renderer/hooks/useTasksIndex.ts"
      ],
      "acceptance": [],
      "dependencies": []
    },
    {
      "id": "11.8",
      "status": "+",
      "title": "Implement click navigation and highlighting for dependency bullets",
      "description": "Add click handlers to dependency bullets that navigate to the target feature or task and highlight it. For feature dependencies, navigate to the TaskDetails containing that feature and highlight the specific feature row. For task dependencies, navigate to the task and provide appropriate highlighting. Ensure smooth transitions and clear visual feedback.",
      "plan": "",
      "context": [
        "src/types/tasks.ts",
        "src/renderer/tasks/TasksDetailsView.tsx",
        "src/renderer/tasks/TasksListView.tsx",
        "src/renderer/components/tasks/DependencyBullet.tsx",
        "src/renderer/services/tasksService.ts",
        "src/renderer/hooks/useTasksIndex.ts"
      ],
      "acceptance": []
    },
    {
      "id": "11.9",
      "status": "+",
      "title": "Create project-wide dependency resolution service",
      "description": "Implement a service that can resolve dependency references across the current project as defined in the ProjectSpec. This service should handle loading and indexing all tasks, and features, providing fast lookup and validation of dependency references. Include error handling for broken or invalid references.",
      "plan": "",
      "context": [
        "src/types/tasks.ts",
        "src/renderer/components/tasks/DependencyBullet.tsx",
        "src/renderer/services/tasksService.ts",
        "src/renderer/hooks/useTasksIndex.ts"
      ],
      "acceptance": [],
      "dependencies": []
    },
    {
      "id": "11.10",
      "status": "+",
      "title": "Implement chat '#' reference selector for tasks and features",
      "description": "Add functionality to the chat interface that shows a Task&Feature dependency selector when users type '#'. This should provide autocomplete/search functionality across all tasks and features in the project scope, allowing users to easily reference and link to specific items. The selected references should be rendered using the standard dependency bullet components.",
      "plan": "",
      "context": [
        "src/types/tasks.ts",
        "src/renderer/services/tasksService.ts",
        "src/renderer/hooks/useTasksIndex.ts"
      ],
      "acceptance": [],
      "rejection": "not working - when I type in '#' nothing happens (I'm blocked from typing it and nothing shows)"
    }
  ]
}