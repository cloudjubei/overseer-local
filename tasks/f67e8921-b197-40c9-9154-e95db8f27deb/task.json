{
  "id": "f67e8921-b197-40c9-9154-e95db8f27deb",
  "status": "-",
  "title": "Factory-ts improvements",
  "description": "Various improvements to add to the project and the factory-ts package",
  "features": [
    {
      "id": "27156e19-3aeb-41de-adc2-75b1c7ca9774",
      "status": "+",
      "title": "Agents require a search-files tool",
      "description": "The agent calls the tool with a list of keywords, the whole project file system is searched and if any of them are found in a given file it will be returned in a final list.\nThe result is the list of relative file paths.",
      "plan": "",
      "context": [],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "8ed1e913-44e2-4321-a631-f1c2c9033177",
      "status": "+",
      "title": "For standard agent suppliers - discover the latest prices",
      "description": "It must be possible to view the latest prices per model and refresh them via a configurable link to the given supplier's website. Store the latest ones in a local file that is read on app start.\nRight now the costs are always 0 - the tokens are not counted anywhere, they should be.",
      "plan": "",
      "context": [
        "src/tools/factory/mainOrchestrator.js",
        "packages/factory-ts/src/orchestrator.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "48da09a8-d2ce-47e0-a0cf-7b0248c6cbb3",
      "status": "?",
      "title": "Local database for file querying",
      "description": "We need a local sql database so that we can store all the files for this project in there - their paths, tokenized content and also their content embeddings.\nThe paths, tokenized content and embeddings must be used for the search-files tool.",
      "plan": "",
      "context": [],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "4b978cb8-59d5-4d5a-bfea-10c3c1ad08a4",
      "status": "?",
      "title": "Watch file changes and keep the SQL database up to date",
      "description": "Whenever a file changes, we can directly update the database with everything but the embeddings - for that we need a system to queue up all files that require embeddings - and a user in the app can then launch an agent to trigger them.",
      "plan": "",
      "context": [],
      "acceptance": [],
      "blockers": [
        "f67e8921-b197-40c9-9154-e95db8f27deb.48da09a8-d2ce-47e0-a0cf-7b0248c6cbb3"
      ]
    },
    {
      "id": "a480aa54-f697-409d-95a7-1b369c3da9ff",
      "status": "+",
      "title": "the word dependencies in Features and Tasks should be changed to 'blockers'",
      "description": "This change should be reflected in any file that uses 'dependencies'",
      "plan": "",
      "context": [],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "0964b90b-396a-43b0-9f4a-a60d0034360e",
      "status": "+",
      "title": "Make an Agent run chat display prettier",
      "description": "make the thoughts as a bubble, and then the tool calls as expandable rows to view the details (mainly for read_files & write_file - the rest of the tools are short enough that they can always display).\nSame goes for the responses to the LLM - apply a similar view as above.",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/screens/AllAgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "98c76bd6-8c5c-4aaf-a778-54f5f57f679a",
      "status": "+",
      "title": "Agent run costs and times are always empty",
      "description": "It seems these are either not recorded correctly or not passed, so that they cannot be viewed properly inside `AgentsView.tsx` and `AllAgentsView.tsx`",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/screens/AllAgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "c2192f2a-9151-4615-b376-986bb0540042",
      "status": "-",
      "title": "The \"Run Agent\" button should be standardised",
      "description": "The views that should have it updated are:\n`TasksListView.tsx`, `TaskDetailsView.tsx`.\nIt should be a round play button as is common in music players.",
      "plan": "",
      "context": [
        "src/renderer/tasks/TasksListView.tsx",
        "src/renderer/tasks/TaskDetailsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "0ce98597-907f-4bdf-a5a8-c8e8b253e612",
      "status": "+",
      "title": "Persist locally agent runs",
      "description": "Make sure the history of agent runs is persisted and read when app is started",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/screens/AllAgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "3a11fceb-bb37-4570-a159-2f39622ca364",
      "status": "+",
      "title": "IconDelete",
      "description": "`IconDelete` inside `Icons.tsx` needs to actually be a proper delete icon",
      "plan": "",
      "context": [
        "src/renderer/components/ui/Icons.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "4df75808-637f-4841-9d31-b8630b1ac8bf",
      "status": "+",
      "title": "running an agent causes an error when it tries to make a local copy of the project",
      "description": "shouldIgnoreCopy inside orchestrator.ts should ignore all sorts of files and folders specific to typescript, node, electron.",
      "plan": "",
      "context": [
        "packages/factory-ts/src/orchestrator.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "56b114e3-daee-481b-9c33-329c8eace503",
      "status": "+",
      "title": "Make the Context Files selection better",
      "description": "1) the Add chip becomes huge once there's even just 1 file (it scales in height to match it). That shouldn't be the case.\n2) when the FileSelector opens - it should auto focus into the search input box so a user can start typing right away\n3) in the FileDisplay and FileSelector - instead of showing a generic document icon, let's try to use a meaningful type extension icon - if need be, create a folder with such common icons to use.\n4) The FileDisplay - should show the icon centered to the left. The name in the middle. \nThe file size small at the bottom.\nThe last modification date at the top right.\nAnd the delete button is correct where it is now.",
      "plan": "",
      "context": [
        "src/renderer/components/ui/FileSelector.tsx",
        "src/renderer/components/ui/FileDisplay.tsx",
        "src/renderer/components/ui/FileDisplay.preview.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "ba3e0af6-3a04-4523-90c7-b90b0d37514b",
      "status": "+",
      "title": "If any of a task's features are rejected (showing the exclamation circle) so should the task",
      "description": "The way this displays should follow exactly how Features are displayed inside TaskDetailsView",
      "plan": "",
      "context": [
        "src/renderer/tasks/TaskDetailsView.tsx",
        "src/renderer/tasks/TasksListView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "b2ad0ce4-b71a-40bc-baa7-3550153bef88",
      "status": "+",
      "title": "When running the orchestrator, finding the next feature for a task should be based on the feature index",
      "description": "the Task.featureIdToDisplayIndex is the means by which the features should be sorted for this.",
      "plan": "",
      "context": [
        "packages/factory-ts/src/orchestrator.ts",
        "packages/factory-ts/src/taskUtils.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "67edb097-edf3-4988-939d-30e3fc3007c1",
      "status": "-",
      "title": "Go over all the tasks in this project and update inline file references",
      "description": "in a lot of the tasks a file could've been referenced as:\n`TasksListView.tsx` \nor simply\nTasksListView.tsx\n\nMake sure that these are transformed into the format:\n@Filepath\n\nThen inside `TasksListView.tsx` and `TaskDetailsView.tsx`, make sure that titles and descriptions for tasks and features show a nice hoverable ui that shows a tooltip about the file. Inside all forms it should just show @Filename so it's easy to edit.",
      "plan": "",
      "context": [
        "src/renderer/tasks/TaskDetailsView.tsx",
        "src/renderer/tasks/TasksListView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "f46696d7-3eee-4f9d-8aee-9419dcee20c9",
      "status": "-",
      "title": "Standardise the Delete, Edit, Add, Create buttons",
      "description": "wherever there's a button that just says Delete we should have it use the standard `DeleteIcon`\nwherever there's a button that just says Add or Create we should have it use the standard `PlusIcon`\nwherever there's a button that just says Edit we should have it use the standard `EditIcon`",
      "plan": "",
      "context": [
        "src/renderer/components/ui/Icons.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "75ce3787-2580-46a7-88e2-4b52a8ecba47",
      "status": "+",
      "title": "Error with copying when running Agent",
      "description": "This error inside the `copyTree` function inside `orchestrator.ts`, the error:\n\n[factory-ts] 2025-09-03T10:05:52.841Z FATAL: Failed to copy repository to temporary directory: Error: ENOENT,  not found in /out/electron-darwin-arm64/electron.app/Contents/Resources/app.asar",
      "plan": "",
      "context": [
        "packages/factory-ts/src/orchestrator.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "d8361748-2f05-4cd4-bb35-80f40db0ff32",
      "status": "+",
      "title": "Error with persisting history when running an agent",
      "description": "This error occurs inside `mainOrchestrator.js` the function is `persistMeta`, the error:\n\n[factory] persistMeta error HISTORY.addOrUpdateRun is not a function",
      "plan": "",
      "context": [
        "src/tools/factory/mainOrchestrator.js"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "6e24f575-cf4d-451f-994f-7190d45ebaaa",
      "status": "-",
      "title": "Toasts should change appearance",
      "description": "Currently when toasts appear, they show in the top right.\nThey should ideally show in the top middle and shouldn't have a transparent background as they then bleed onto other text below.\nIn general they should be smaller - they should feel like an os notification.\nWhen they appear they should have a nice animation sliding in and when disappearing - sliding out.",
      "plan": "",
      "context": [
        "src/renderer/components/ui/Toast.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "bbc90ba1-4348-4a17-9921-18b6c0ece863",
      "status": "?",
      "title": "Run agent button long press",
      "description": "When the new Run Agent button is long pressed it should show an agent type selector - upon selection it runs with that selected agent. Normal click runs the 'developer' agent like now.",
      "plan": "",
      "context": [],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "493c32f2-94ab-4677-8cc4-a776249c91e5",
      "status": "?",
      "title": "TaskCard missing RunAgent on hover",
      "description": "`TaskCard.tsx` should have the \"Run Agent\" button in the top right.\nSame as in `TasksListView.tsx` if the task has a running agent - show the status.",
      "plan": "",
      "context": [
        "src/renderer/tasks/TasksListView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    }
  ],
  "featureIdToDisplayIndex": {
    "27156e19-3aeb-41de-adc2-75b1c7ca9774": 1,
    "0964b90b-396a-43b0-9f4a-a60d0034360e": 2,
    "56b114e3-daee-481b-9c33-329c8eace503": 3,
    "ba3e0af6-3a04-4523-90c7-b90b0d37514b": 4,
    "98c76bd6-8c5c-4aaf-a778-54f5f57f679a": 5,
    "4df75808-637f-4841-9d31-b8630b1ac8bf": 6,
    "8ed1e913-44e2-4321-a631-f1c2c9033177": 7,
    "a480aa54-f697-409d-95a7-1b369c3da9ff": 8,
    "b2ad0ce4-b71a-40bc-baa7-3550153bef88": 9,
    "0ce98597-907f-4bdf-a5a8-c8e8b253e612": 10,
    "75ce3787-2580-46a7-88e2-4b52a8ecba47": 11,
    "d8361748-2f05-4cd4-bb35-80f40db0ff32": 12,
    "3a11fceb-bb37-4570-a159-2f39622ca364": 13,
    "c2192f2a-9151-4615-b376-986bb0540042": 14,
    "f46696d7-3eee-4f9d-8aee-9419dcee20c9": 15,
    "67edb097-edf3-4988-939d-30e3fc3007c1": 16,
    "6e24f575-cf4d-451f-994f-7190d45ebaaa": 17,
    "bbc90ba1-4348-4a17-9921-18b6c0ece863": 18,
    "493c32f2-94ab-4677-8cc4-a776249c91e5": 19,
    "48da09a8-d2ce-47e0-a0cf-7b0248c6cbb3": 20,
    "4b978cb8-59d5-4d5a-bfea-10c3c1ad08a4": 21
  }
}