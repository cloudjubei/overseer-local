{
  "id": "f67e8921-b197-40c9-9154-e95db8f27deb",
  "status": "-",
  "title": "Factory-ts improvements",
  "description": "Various improvements to add to the project and the factory-ts package",
  "features": [
    {
      "id": "27156e19-3aeb-41de-adc2-75b1c7ca9774",
      "status": "+",
      "title": "Agents require a search-files tool",
      "description": "The agent calls the tool with a list of keywords, the whole project file system is searched and if any of them are found in a given file it will be returned in a final list.\nThe result is the list of relative file paths.",
      "plan": "",
      "context": [],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "8ed1e913-44e2-4321-a631-f1c2c9033177",
      "status": "+",
      "title": "For standard agent suppliers - discover the latest prices",
      "description": "It must be possible to view the latest prices per model and refresh them via a configurable link to the given supplier's website. Store the latest ones in a local file that is read on app start.\nRight now the costs are always 0 - the tokens are not counted anywhere, they should be.",
      "plan": "",
      "context": [
        "src/tools/factory/mainOrchestrator.js",
        "packages/factory-ts/src/orchestrator.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "a480aa54-f697-409d-95a7-1b369c3da9ff",
      "status": "+",
      "title": "the word dependencies in Features and Tasks should be changed to 'blockers'",
      "description": "This change should be reflected in any file that uses 'dependencies'",
      "plan": "",
      "context": [],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "0964b90b-396a-43b0-9f4a-a60d0034360e",
      "status": "+",
      "title": "Make an Agent run chat display prettier",
      "description": "make the thoughts as a bubble, and then the tool calls as expandable rows to view the details (mainly for read_files & write_file - the rest of the tools are short enough that they can always display).\nSame goes for the responses to the LLM - apply a similar view as above.",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/screens/AllAgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "98c76bd6-8c5c-4aaf-a778-54f5f57f679a",
      "status": "+",
      "title": "Agent run costs and times are always empty",
      "description": "It seems these are either not recorded correctly or not passed, so that they cannot be viewed properly inside @AgentsView.tsx and @AllAgentsView.tsx",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/screens/AllAgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "c2192f2a-9151-4615-b376-986bb0540042",
      "status": "+",
      "title": "The \"Run Agent\" button should be standardised",
      "description": "The views that should have it updated are:\n@TasksListView.tsx, @TaskDetailsView.tsx.\nIt should be a round play button as is common in music players.",
      "plan": "",
      "context": [
        "src/renderer/tasks/TasksListView.tsx",
        "src/renderer/tasks/TaskDetailsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "0ce98597-907f-4bdf-a5a8-c8e8b253e612",
      "status": "+",
      "title": "Persist locally agent runs",
      "description": "Make sure the history of agent runs is persisted and read when app is started",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/screens/AllAgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "3a11fceb-bb37-4570-a159-2f39622ca364",
      "status": "+",
      "title": "IconDelete",
      "description": "`IconDelete` inside @Icons.tsx needs to actually be a proper delete icon",
      "plan": "",
      "context": [
        "src/renderer/components/ui/Icons.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "4df75808-637f-4841-9d31-b8630b1ac8bf",
      "status": "+",
      "title": "running an agent causes an error when it tries to make a local copy of the project",
      "description": "shouldIgnoreCopy inside @orchestrator.ts should ignore all sorts of files and folders specific to typescript, node, electron.",
      "plan": "",
      "context": [
        "packages/factory-ts/src/orchestrator.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "56b114e3-daee-481b-9c33-329c8eace503",
      "status": "+",
      "title": "Make the Context Files selection better",
      "description": "1) the Add chip becomes huge once there's even just 1 file (it scales in height to match it). That shouldn't be the case.\n2) when the FileSelector opens - it should auto focus into the search input box so a user can start typing right away\n3) in the FileDisplay and FileSelector - instead of showing a generic document icon, let's try to use a meaningful type extension icon - if need be, create a folder with such common icons to use.\n4) The FileDisplay - should show the icon centered to the left. The name in the middle. \nThe file size small at the bottom.\nThe last modification date at the top right.\nAnd the delete button is correct where it is now.",
      "plan": "",
      "context": [
        "src/renderer/components/ui/FileSelector.tsx",
        "src/renderer/components/ui/FileDisplay.tsx",
        "src/renderer/components/ui/FileDisplay.preview.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "ba3e0af6-3a04-4523-90c7-b90b0d37514b",
      "status": "+",
      "title": "If any of a task's features are rejected (showing the exclamation circle) so should the task",
      "description": "The way this displays should follow exactly how Features are displayed inside TaskDetailsView",
      "plan": "",
      "context": [
        "src/renderer/tasks/TaskDetailsView.tsx",
        "src/renderer/tasks/TasksListView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "b2ad0ce4-b71a-40bc-baa7-3550153bef88",
      "status": "+",
      "title": "When running the orchestrator, finding the next feature for a task should be based on the feature index",
      "description": "the Task.featureIdToDisplayIndex is the means by which the features should be sorted for this.",
      "plan": "",
      "context": [
        "packages/factory-ts/src/orchestrator.ts",
        "packages/factory-ts/src/taskUtils.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "67edb097-edf3-4988-939d-30e3fc3007c1",
      "status": "+",
      "title": "Go over all the tasks in this project and update inline file references",
      "description": "in a lot of the tasks a file could've been referenced as:\n@TasksListView.tsx \nor simply\n@TasksListView.tsx\n\nMake sure that these are transformed into the format:\n@Filepath\n\nThen inside @TasksListView.tsx and @TaskDetailsView.tsx, make sure that titles and descriptions for tasks and features show a nice hoverable ui that shows a tooltip about the file. Inside all forms it should just show @Filename so it's easy to edit.",
      "plan": "",
      "context": [
        "src/renderer/tasks/TaskDetailsView.tsx",
        "src/renderer/tasks/TasksListView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "f46696d7-3eee-4f9d-8aee-9419dcee20c9",
      "status": "+",
      "title": "Standardise the Delete, Edit, Add, Create buttons",
      "description": "wherever there's a button that just says Delete we should have it use the standard `DeleteIcon`\nwherever there's a button that just says Add or Create we should have it use the standard `PlusIcon`\nwherever there's a button that just says Edit we should have it use the standard `EditIcon`",
      "plan": "",
      "context": [
        "src/renderer/components/ui/Icons.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "d8361748-2f05-4cd4-bb35-80f40db0ff32",
      "status": "+",
      "title": "Agents - run histories UI improvements",
      "description": "The table should show the following columns\nRun -> the date + time below when it started\nTask -> Can use the @src/renderer/components/tasks/DependencyBubble.tsx as it serves the same exact purpose\nStatus -> create a chip that shows the appropriate StatusIcon inside. These new icons need to be created.\nTurn -> show as a chip.\nCost -> stays the same\nTokens -> stays the same\nMessages -> how many turns it took\nDuration -> a nicely formatted display of the time it took",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/tasks/TasksListView.tsx",
        "src/renderer/components/tasks/DependencyBullet.tsx",
        "src/renderer/components/ui/Icons.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "6e24f575-cf4d-451f-994f-7190d45ebaaa",
      "status": "?",
      "title": "Toasts should animate",
      "description": "Toasts need to slide down with an animation when appearing and slide up when hiding.\nThey need to be snappy. It should also be possible to flick them up to make them disappear (like notifications on a mobile device).",
      "plan": "",
      "context": [
        "src/renderer/components/ui/Toast.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "bbc90ba1-4348-4a17-9921-18b6c0ece863",
      "status": "-",
      "title": "Run agent button long press",
      "description": "When the new Run Agent button is long pressed it should show an agent type selector - upon selection it runs with that selected agent. Normal click runs the 'developer' agent like now.",
      "plan": "",
      "context": [
        "src/renderer/components/tasks/RunAgentButton.tsx",
        "src/renderer/tasks/TaskDetailsView.tsx"
      ],
      "acceptance": [],
      "blockers": [],
      "rejection": "Now the long press works, but it's still possible to drag the whole feature row (this is inside @src/renderer/tasks/TaskDetailsView.tsx ).\nBecause the button appears on hover and disappears when outside - when selecting a value from the Selector - the button disappears. It shouldn't."
    },
    {
      "id": "493c32f2-94ab-4677-8cc4-a776249c91e5",
      "status": "+",
      "title": "TaskCard missing RunAgent on hover",
      "description": "@src/renderer/components/tasks/TaskCard.tsx should have the \"Run Agent\" button in the top right.\nSame as in @src/renderer/tasks/TasksListView.tsx if the task has a running agent - show the status.",
      "plan": "",
      "context": [
        "src/renderer/tasks/TasksListView.tsx",
        "src/renderer/components/tasks/TaskCard.tsx",
        "src/renderer/components/tasks/RunAgentButton.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "6a8066ee-230f-4f31-b531-3d8cadff4178",
      "status": "?",
      "title": "ChatsManager should not have any agentic tools - everything should be routed through factory-ts",
      "description": "the factory-ts package should be the one place where all agentic tools are placed - currently @src/chat/manager.js has its own functions. Those should be cleaned up and used appropriately from factory-ts.",
      "plan": "",
      "context": [
        "src/chat/manager.js",
        "src/chat/storage.js",
        "packages/factory-ts/src/fileTools.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "abefc7ba-3098-4aee-a01b-694a5a2a9d43",
      "status": "+",
      "title": "When running an agent - all the GIT credentials are not found in the @.env",
      "description": "There is a .env file both in this project and in factory-ts.\nJust like in the python counterpart ( the files @packages/factory-ts/blueprint/run_local_agent.py and @packages/factory-ts/blueprint/git_manager.py ) the GIT credentials must be loaded from the workspaces `.env` file in the root of the project.",
      "plan": "",
      "context": [
        "packages/factory-ts/src/gitManager.ts",
        "packages/factory-ts/blueprint/run_local_agent.py",
        "packages/factory-ts/blueprint/git_manager.py"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "e9e526e8-576a-448b-9359-db97475db485",
      "status": "+",
      "title": "Agent Run - UI fix",
      "description": "When viewing an agent run inside @src/renderer/screens/AgentsView.tsx it doesn't show the whole conversation. Just the last message. This needs to be fixed to show the full conversation.",
      "plan": "",
      "context": [
        "src/renderer/screens/AllAgentsView.tsx",
        "src/renderer/screens/AgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "22793b7c-0bfa-4da4-8b3a-ae07fbe2a0ce",
      "status": "-",
      "title": "FileMentions should be renamed RichText",
      "description": "This component should then be used inside Chat and inside agent runs where messages are displayed.",
      "plan": "",
      "context": [
        "src/renderer/components/ui/FileMentions.tsx",
        "src/renderer/components/agents/ChatConversation.tsx",
        "src/renderer/screens/AllAgentsView.tsx",
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/screens/ChatView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    }
  ],
  "featureIdToDisplayIndex": {
    "27156e19-3aeb-41de-adc2-75b1c7ca9774": 1,
    "0964b90b-396a-43b0-9f4a-a60d0034360e": 2,
    "56b114e3-daee-481b-9c33-329c8eace503": 3,
    "ba3e0af6-3a04-4523-90c7-b90b0d37514b": 4,
    "98c76bd6-8c5c-4aaf-a778-54f5f57f679a": 5,
    "4df75808-637f-4841-9d31-b8630b1ac8bf": 6,
    "8ed1e913-44e2-4321-a631-f1c2c9033177": 7,
    "a480aa54-f697-409d-95a7-1b369c3da9ff": 8,
    "b2ad0ce4-b71a-40bc-baa7-3550153bef88": 9,
    "0ce98597-907f-4bdf-a5a8-c8e8b253e612": 10,
    "3a11fceb-bb37-4570-a159-2f39622ca364": 11,
    "c2192f2a-9151-4615-b376-986bb0540042": 12,
    "f46696d7-3eee-4f9d-8aee-9419dcee20c9": 13,
    "67edb097-edf3-4988-939d-30e3fc3007c1": 14,
    "493c32f2-94ab-4677-8cc4-a776249c91e5": 15,
    "d8361748-2f05-4cd4-bb35-80f40db0ff32": 16,
    "e9e526e8-576a-448b-9359-db97475db485": 17,
    "abefc7ba-3098-4aee-a01b-694a5a2a9d43": 18,
    "bbc90ba1-4348-4a17-9921-18b6c0ece863": 19,
    "22793b7c-0bfa-4da4-8b3a-ae07fbe2a0ce": 20,
    "6e24f575-cf4d-451f-994f-7190d45ebaaa": 21,
    "6a8066ee-230f-4f31-b531-3d8cadff4178": 22
  }
}