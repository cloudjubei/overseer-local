{
  "id": "f67e8921-b197-40c9-9154-e95db8f27deb",
  "status": "-",
  "title": "UI Improvements",
  "description": "Various UI improvements to the app",
  "features": [
    {
      "id": "27156e19-3aeb-41de-adc2-75b1c7ca9774",
      "status": "+",
      "title": "Agents require a search-files tool",
      "description": "The agent calls the tool with a list of keywords, the whole project file system is searched and if any of them are found in a given file it will be returned in a final list.\nThe result is the list of relative file paths.",
      "plan": "",
      "context": [],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "8ed1e913-44e2-4321-a631-f1c2c9033177",
      "status": "+",
      "title": "For standard agent suppliers - discover the latest prices",
      "description": "It must be possible to view the latest prices per model and refresh them via a configurable link to the given supplier's website. Store the latest ones in a local file that is read on app start.\nRight now the costs are always 0 - the tokens are not counted anywhere, they should be.",
      "plan": "",
      "context": [
        "src/tools/factory/mainOrchestrator.js",
        "packages/factory-ts/src/orchestrator.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "a480aa54-f697-409d-95a7-1b369c3da9ff",
      "status": "+",
      "title": "the word dependencies in Features and Tasks should be changed to 'blockers'",
      "description": "This change should be reflected in any file that uses 'dependencies'",
      "plan": "",
      "context": [],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "0964b90b-396a-43b0-9f4a-a60d0034360e",
      "status": "+",
      "title": "Make an Agent run chat display prettier",
      "description": "make the thoughts as a bubble, and then the tool calls as expandable rows to view the details (mainly for read_files & write_file - the rest of the tools are short enough that they can always display).\nSame goes for the responses to the LLM - apply a similar view as above.",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/screens/AllAgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "98c76bd6-8c5c-4aaf-a778-54f5f57f679a",
      "status": "+",
      "title": "Agent run costs and times are always empty",
      "description": "It seems these are either not recorded correctly or not passed, so that they cannot be viewed properly inside @AgentsView.tsx and @AllAgentsView.tsx",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/screens/AllAgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "c2192f2a-9151-4615-b376-986bb0540042",
      "status": "+",
      "title": "The \"Run Agent\" button should be standardised",
      "description": "The views that should have it updated are:\n@TasksListView.tsx, @TaskDetailsView.tsx.\nIt should be a round play button as is common in music players.",
      "plan": "",
      "context": [
        "src/renderer/tasks/TasksListView.tsx",
        "src/renderer/tasks/TaskDetailsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "0ce98597-907f-4bdf-a5a8-c8e8b253e612",
      "status": "+",
      "title": "Persist locally agent runs",
      "description": "Make sure the history of agent runs is persisted and read when app is started",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/screens/AllAgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "3a11fceb-bb37-4570-a159-2f39622ca364",
      "status": "+",
      "title": "IconDelete",
      "description": "`IconDelete` inside @Icons.tsx needs to actually be a proper delete icon",
      "plan": "",
      "context": [
        "src/renderer/components/ui/Icons.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "4df75808-637f-4841-9d31-b8630b1ac8bf",
      "status": "+",
      "title": "running an agent causes an error when it tries to make a local copy of the project",
      "description": "shouldIgnoreCopy inside @orchestrator.ts should ignore all sorts of files and folders specific to typescript, node, electron.",
      "plan": "",
      "context": [
        "packages/factory-ts/src/orchestrator.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "56b114e3-daee-481b-9c33-329c8eace503",
      "status": "+",
      "title": "Make the Context Files selection better",
      "description": "1) the Add chip becomes huge once there's even just 1 file (it scales in height to match it). That shouldn't be the case.\n2) when the FileSelector opens - it should auto focus into the search input box so a user can start typing right away\n3) in the FileDisplay and FileSelector - instead of showing a generic document icon, let's try to use a meaningful type extension icon - if need be, create a folder with such common icons to use.\n4) The FileDisplay - should show the icon centered to the left. The name in the middle. \nThe file size small at the bottom.\nThe last modification date at the top right.\nAnd the delete button is correct where it is now.",
      "plan": "",
      "context": [
        "src/renderer/components/ui/FileSelector.tsx",
        "src/renderer/components/ui/FileDisplay.tsx",
        "src/renderer/components/ui/FileDisplay.preview.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "ba3e0af6-3a04-4523-90c7-b90b0d37514b",
      "status": "+",
      "title": "If any of a task's features are rejected (showing the exclamation circle) so should the task",
      "description": "The way this displays should follow exactly how Features are displayed inside TaskDetailsView",
      "plan": "",
      "context": [
        "src/renderer/tasks/TaskDetailsView.tsx",
        "src/renderer/tasks/TasksListView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "b2ad0ce4-b71a-40bc-baa7-3550153bef88",
      "status": "+",
      "title": "When running the orchestrator, finding the next feature for a task should be based on the feature index",
      "description": "the Task.featureIdToDisplayIndex is the means by which the features should be sorted for this.",
      "plan": "",
      "context": [
        "packages/factory-ts/src/orchestrator.ts",
        "packages/factory-ts/src/taskUtils.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "67edb097-edf3-4988-939d-30e3fc3007c1",
      "status": "+",
      "title": "Go over all the tasks in this project and update inline file references",
      "description": "in a lot of the tasks a file could've been referenced as:\n@TasksListView.tsx \nor simply\n@TasksListView.tsx\n\nMake sure that these are transformed into the format:\n@Filepath\n\nThen inside @TasksListView.tsx and @TaskDetailsView.tsx, make sure that titles and descriptions for tasks and features show a nice hoverable ui that shows a tooltip about the file. Inside all forms it should just show @Filename so it's easy to edit.",
      "plan": "",
      "context": [
        "src/renderer/tasks/TaskDetailsView.tsx",
        "src/renderer/tasks/TasksListView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "f46696d7-3eee-4f9d-8aee-9419dcee20c9",
      "status": "+",
      "title": "Standardise the Delete, Edit, Add, Create buttons",
      "description": "wherever there's a button that just says Delete we should have it use the standard `DeleteIcon`\nwherever there's a button that just says Add or Create we should have it use the standard `PlusIcon`\nwherever there's a button that just says Edit we should have it use the standard `EditIcon`",
      "plan": "",
      "context": [
        "src/renderer/components/ui/Icons.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "d8361748-2f05-4cd4-bb35-80f40db0ff32",
      "status": "+",
      "title": "Agents - run histories UI improvements",
      "description": "@src/renderer/components/agents/ChatConversation.tsx used inside @src/renderer/screens/AgentsView.tsx should have overly large message texts put in a scrollable textbox.\n\nThe currently running agents in @src/renderer/screens/AgentsView.tsx should follow a similar format as the history of agent runs.\n\n@src/renderer/screens/AllAgentsView.tsx should follow a similar style to @src/renderer/screens/AgentsView.tsx \nTo make things more manageable - a component for the agent row display should be made so it can be reused.",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/tasks/TasksListView.tsx",
        "src/renderer/components/tasks/DependencyBullet.tsx",
        "src/renderer/components/ui/Icons.tsx",
        "src/renderer/components/agents/ChatConversation.tsx",
        "src/renderer/screens/AllAgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "6e24f575-cf4d-451f-994f-7190d45ebaaa",
      "status": "+",
      "title": "Toasts should animate",
      "description": "Toasts need to slide down with an animation when appearing and slide up when hiding.\nThey need to be snappy. It should also be possible to flick them up to make them disappear (like notifications on a mobile device).",
      "plan": "",
      "context": [
        "src/renderer/components/ui/Toast.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "bbc90ba1-4348-4a17-9921-18b6c0ece863",
      "status": "+",
      "title": "Run agent button long press",
      "description": "When the new Run Agent button is long pressed it should show an agent type selector - upon selection it runs with that selected agent. Normal click runs the 'developer' agent like now.",
      "plan": "",
      "context": [
        "src/renderer/components/tasks/RunAgentButton.tsx",
        "src/renderer/tasks/TaskDetailsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "493c32f2-94ab-4677-8cc4-a776249c91e5",
      "status": "+",
      "title": "TaskCard missing RunAgent on hover",
      "description": "@src/renderer/components/tasks/TaskCard.tsx should have the \"Run Agent\" button in the top right.\nSame as in @src/renderer/tasks/TasksListView.tsx if the task has a running agent - show the status.",
      "plan": "",
      "context": [
        "src/renderer/tasks/TasksListView.tsx",
        "src/renderer/components/tasks/TaskCard.tsx",
        "src/renderer/components/tasks/RunAgentButton.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "6a8066ee-230f-4f31-b531-3d8cadff4178",
      "status": "+",
      "title": "ChatsManager should not have any agentic tools - everything should be routed through factory-ts",
      "description": "the factory-ts package should be the one place where all agentic tools are placed - currently @src/chat/manager.js has its own functions. Those should be cleaned up and used appropriately from factory-ts - @packages/factory-ts/src/fileTools.ts or @packages/factory-ts/src/taskUtils.ts for instance.",
      "plan": "",
      "context": [
        "src/chat/manager.js",
        "packages/factory-ts/src/fileTools.ts",
        "packages/factory-ts/src/taskUtils.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "abefc7ba-3098-4aee-a01b-694a5a2a9d43",
      "status": "+",
      "title": "When running an agent - all the GIT credentials are not found in the @.env",
      "description": "There is a .env file both in this project and in factory-ts.\nJust like in the python counterpart ( the files @packages/factory-ts/blueprint/run_local_agent.py and @packages/factory-ts/blueprint/git_manager.py ) the GIT credentials must be loaded from the workspaces `.env` file in the root of the project.",
      "plan": "",
      "context": [
        "packages/factory-ts/src/gitManager.ts",
        "packages/factory-ts/blueprint/run_local_agent.py",
        "packages/factory-ts/blueprint/git_manager.py"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "e9e526e8-576a-448b-9359-db97475db485",
      "status": "+",
      "title": "Agent Run - UI fix",
      "description": "When viewing an agent run inside @src/renderer/screens/AgentsView.tsx it doesn't show the whole conversation. Just the last message. This needs to be fixed to show the full conversation.",
      "plan": "",
      "context": [
        "src/renderer/screens/AllAgentsView.tsx",
        "src/renderer/screens/AgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "22793b7c-0bfa-4da4-8b3a-ae07fbe2a0ce",
      "status": "+",
      "title": "FileMentions should be renamed RichText",
      "description": "This component should then be used inside Chat and inside agent runs where messages are displayed.",
      "plan": "",
      "context": [
        "src/renderer/components/ui/FileMentions.tsx",
        "src/renderer/components/agents/ChatConversation.tsx",
        "src/renderer/screens/AllAgentsView.tsx",
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/screens/ChatView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "894453ef-c700-4128-b714-4ec94498498c",
      "status": "+",
      "title": "No edit button in Tasks and Features",
      "description": "In @src/renderer/tasks/TaskDetailsView.tsx Clicking a feature should open the edit feature form - the edit button shouldn't show.\nIn @src/renderer/screens/TasksView.tsx Tasks already open on click - there should just be no edit button present.",
      "plan": "",
      "context": [
        "src/renderer/components/tasks/FeatureForm.tsx",
        "src/renderer/tasks/FeatureEditView.tsx",
        "src/renderer/tasks/FeatureCreateView.tsx",
        "src/renderer/tasks/TaskDetailsView.tsx",
        "src/renderer/screens/TasksView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "0fea71a8-c0da-48a1-b4ea-c0db2196c902",
      "status": "+",
      "title": "When an agent runs - there's a duplicate history run",
      "description": "The Electron app has its own local history run, but when the agent runs on the copy of the project - it also produces a history run. This shouldn't happen - only the original app where the agent was started should create the history run. To avoid this - the agent should simply have an extra line for these files in its .gitignore file. The histories shouldn't be removed (they were as a first fix attempt).",
      "plan": "",
      "context": [
        "src/tools/factory/mainOrchestrator.js",
        "src/tools/factory/orchestratorBridge.ts",
        "packages/factory-ts/src/orchestrator.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "d5b4852d-df73-4818-8db0-f7d6954c0108",
      "status": "+",
      "title": "The agent persona markdown files are too bloated.",
      "description": "These files contain the tool specs, but those are yet again repeated in the overall tool spec in the orchestrator.\nThese files shouldn't have the list of tools available, but the tool descriptions provided by the orchestrator should contain extra comments as to what each tool does (similarly to how each agent's markdown persona file has it).",
      "plan": "",
      "context": [
        "packages/factory-ts/docs/AGENT_CONTEXTER.md",
        "packages/factory-ts/docs/AGENT_DEVELOPER.md",
        "packages/factory-ts/docs/AGENT_PLANNER.md",
        "packages/factory-ts/docs/AGENT_SPECCER.md",
        "packages/factory-ts/docs/AGENT_TESTER.md",
        "packages/factory-ts/src/orchestrator.ts",
        "src/tools/factory/mainOrchestrator.js"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "b8d93d1d-5c66-4628-8a85-9da0197e97e2",
      "status": "+",
      "title": "The main FILE_ORGANISATION.md is bloated",
      "description": "This file is always included and it contains irrelevant information.\nAgents are asked to update this file, but they seem to always add extra unimportant info.\nThis needs to be tightened and made sure that the instructions for editing the file are clear, and all edits are succinct and precise.\nThe file should contain overall pointers to the project - not detailed descriptions of each file.\nIt should not be a log of changes.",
      "plan": "",
      "context": [
        "packages/factory-ts/docs/AGENT_CONTEXTER.md",
        "packages/factory-ts/docs/AGENT_DEVELOPER.md",
        "packages/factory-ts/docs/AGENT_PLANNER.md",
        "packages/factory-ts/docs/AGENT_SPECCER.md",
        "packages/factory-ts/docs/AGENT_TESTER.md"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "d05e6082-c27c-487f-bacd-837f7f5b7f73",
      "status": "+",
      "title": "Cancelled agent runs are not recorded properly",
      "description": "They don't change any files and are not recorded. They always show as in progress.",
      "plan": "",
      "context": [
        "packages/factory-ts/src/orchestrator.ts",
        "src/tools/factory/mainOrchestrator.js"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "352e49dd-37f2-428c-a85c-da7a2c1bd66a",
      "status": "+",
      "title": "Agent runs should show the model",
      "description": "Create a reusable component - a nice display chip - that shows the provider and model.",
      "plan": "",
      "context": [],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "9244467b-e3d1-475a-a1f0-bf35d8482629",
      "status": "+",
      "title": "The status display for an Agent run inside TasksView.tsx and TaskDetailsView.tsx should match the display from AgentsView.tsx",
      "description": "Reuse the StatusChip inside AgentsView.tsx",
      "plan": "",
      "context": [
        "src/renderer/tasks/TasksListView.tsx",
        "src/renderer/tasks/TaskDetailsView.tsx",
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/components/agents/StatusChip.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "37730047-f692-48c0-b6e7-9093564596a9",
      "status": "+",
      "title": "In TaskDetailsView.tsx next to the play button show the Agent Model control",
      "description": "This control should show the current active LLM configuration and allow to quickly pick a configuration from the last 5 recent ones + a last option that would take the user to the LLM Configuration settings.",
      "plan": "",
      "context": [
        "src/renderer/tasks/TaskDetailsView.tsx",
        "src/renderer/screens/SettingsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "82b9481c-7129-4bea-8029-0e41a56531fe",
      "status": "+",
      "title": "StatusChip improvements",
      "description": "@src/renderer/components/agents/StatusChip.tsx should only have the badge with an icon inside displaying. The status text should only show on hover as a small tooltip.",
      "plan": "",
      "context": [
        "src/renderer/components/agents/StatusChip.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "2d607668-7481-4d8f-89cc-5afebb89e67b",
      "status": "+",
      "title": "An active run should only show inside Active not History",
      "description": "",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "5fcbee8a-2734-4fa5-b404-6d9155a01053",
      "status": "+",
      "title": "Status and sort preferences are not stored",
      "description": "Whenever the user changes preferences for what to display in the TasksView.tsx in the 'list' mode - it should store that, so at the next session it can be resumed in the same exact state.",
      "plan": "",
      "context": [
        "src/renderer/screens/TasksView.tsx",
        "src/renderer/components/tasks/StatusControl.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "76ff2065-cd03-4815-b36b-8dfabd278b2b",
      "status": "+",
      "title": "Use the StatusChip inside AgentRunBullet",
      "description": "We should reuse this nice component that we have.",
      "plan": "",
      "context": [
        "src/renderer/components/agents/StatusChip.tsx",
        "src/renderer/components/agents/AgentRunBullet.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "46fbca0c-0fd5-4b92-aeae-5e8488cfd192",
      "status": "+",
      "title": "The ModelChip should be slimmer",
      "description": "Have the provider on one row and the modle name on a second row.",
      "plan": "",
      "context": [
        "src/renderer/components/agents/ModelChip.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "5f2a9d3e-dfa3-4e79-ba0b-8b2252556681",
      "status": "+",
      "title": "When editing/creating a feature allow quick file lookups",
      "description": "When a user types in the description and starts typing \"@\" a file lookup search tooltip should show above that will filter files based on what the user types. The user can then select the appropriate file. It should also automatically add this file into the Context Files list.\n\nThis feature is currently implemented seperately inside @src/renderer/screens/ChatView.tsx  and @src/renderer/components/tasks/FeatureForm.tsx \nthe files responsible are:\n@src/renderer/components/ui/FileMentionsTextarea.tsx and @src/renderer/hooks/useFilesAutocomplete.ts   \n\n@src/renderer/screens/ChatView.tsx actually also uses @src/renderer/hooks/useReferencesAutocomplete.ts which allows the text input to display references. Both of these ideas are relevant for @src/renderer/components/tasks/FeatureForm.tsx and @src/renderer/screens/ChatView.tsx . Both should allow the display of references lookup and file lookup - they simply must be able to have callbacks so that they can do extra things with them (FeatureForm needs to add/remove files to/from the context and add/remove blockers to/from the feature - this is missing right now).",
      "plan": "",
      "context": [
        "src/renderer/screens/ChatView.tsx",
        "src/renderer/components/ui/FileMentionsTextarea.tsx",
        "src/renderer/hooks/useFilesAutocomplete.ts",
        "src/renderer/hooks/useReferencesAutocomplete.ts",
        "src/renderer/components/tasks/FeatureForm.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "7dd2e06b-32aa-418b-9e32-5efc0ecd94dd",
      "status": "+",
      "title": "The search and sort bar for features should be placed at the top",
      "description": "TaskDetailsView.tsx should follow TasksView.tsx",
      "plan": "",
      "context": [
        "src/renderer/screens/TasksView.tsx",
        "src/renderer/tasks/TaskDetailsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "274eb915-a7b3-4eed-b71d-e7888f1340fb",
      "status": "+",
      "title": "ChatConversation improvements",
      "description": "@src/renderer/components/agents/ChatConversation.tsx  is currently broken - there was a new type AgentFeatureRunLog introduced inside AgentRun in the file @src/renderer/services/agentsService.ts . Adapt everything in ChatConversation to make it work. Display a list of features in an AgentRun, each Feature run showing the 'turns'. After the first initial message, each turn is a series of 2 messages - 1 from the LLM and 1 a response with tool calls. The final message is a single one from the LLM. Make sure the orchestrator works correctly too.",
      "plan": "",
      "context": [
        "src/renderer/components/agents/ChatConversation.tsx",
        "packages/factory-ts/src/types.ts",
        "src/renderer/services/agentsService.ts",
        "src/renderer/screens/ChatView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "26d01bef-ce79-498a-9cc8-7a6ada530002",
      "status": "+",
      "title": "Reference and File lookup usability improvements",
      "description": "When the user types # for references and @ for files to be looked up in the @src/renderer/components/ui/FileMentionsTextarea.tsx if the user presses space while the lookup is showing - auto pick the top result.\nAlso, for references - they should always display in the text as #{task_index}.{feature_index} - the user will most likely search for the features by these indices.",
      "plan": "",
      "context": [
        "src/renderer/components/ui/FileMentionsTextarea.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "5f13e562-bbd6-4f67-97c9-00ba79ddb138",
      "status": "+",
      "title": "After running a first agent, running any more stalls",
      "description": "Any consecutive agent after the first never starts.\nCancelling an agent from the @src/renderer/screens/AgentsView.tsx   screen doesn't help either.\n\nThe last message in the log is:\n[factory] SUBSCRIBE\n\nI can see this message in the agent run log:\n\"message\": \"Error: ENOENT: no such file or directory, open '/var/folders/25/4dns7s115_q13z992np622qw0000gn/T/factory-ts-A3L8P3/workspace/projects/main.json'\\n    at async open (node:internal/fs/promises:639:25)\\n    at async Object.readFile (node:internal/fs/promises:1243:14)\\n    at async Object.getProjectDir (file:///packages/factory-ts/dist/taskUtils.js:18:17)\\n    at async runIsolatedOrchestrator (file:///Users/cloud/Documents/Work/TheFactory/projects/overseer-local/packages/factory-ts/dist/orchestrator.js:489:24)\\n    at async file:///packages/factory-ts/dist/index.js:197:17\",\n\n\nAnd I can see a warning in the console:\nMaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 files:subscribe listeners added.",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "57988106-364d-4e52-8b50-94d18839c319",
      "status": "+",
      "title": "ChatConversation improvements",
      "description": "@src/renderer/components/agents/ChatConversation.tsx  doesn't update while an agent is running. I have to close the popup and open it to see the latest messages. This shouldn't be the case - it should keep on scrolling down the messages if the user is at the bottom, and if not - keep on adding them.",
      "plan": "",
      "context": [
        "src/renderer/components/agents/ChatConversation.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "dc067730-dede-40a5-affe-e04410170819",
      "status": "+",
      "title": "AgentsView and AllAgentsView improvements",
      "description": "In  @src/renderer/screens/AgentsView.tsx  the active and history runs should be sorted by date - the most recent at the top\n\nAlso, both in @src/renderer/screens/AgentsView.tsx and in @src/renderer/screens/AllAgentsView.tsx it shouldn't show the Turn column, but instead show how many features were completed out of how many.\n\nIn @src/renderer/screens/AgentsView.tsx in the active runs, there should be no Status column, but an additional Thinking column before duration that should update with the time the agent is taking to answer the last message.",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/screens/AllAgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "fd101477-cb98-4d87-90c4-efb87f39c5e6",
      "status": "+",
      "title": "Allow moving tasks when in 'not-done'",
      "description": "Pay close attention to what the index should be (remember the display index is always +1 due to starting at 1)\n@src/renderer/screens/TasksView.tsx\n\nIt should be also possible to move features in @src/renderer/tasks/TaskDetailsView.tsx also pay attention to the indices.",
      "plan": "",
      "context": [
        "src/renderer/screens/TasksView.tsx",
        "src/renderer/tasks/TaskDetailsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "e3d6999d-3dcd-4f28-8452-77daa5b9cab2",
      "status": "+",
      "title": "After closing the app and coming back none of the agent run histories show messages properly",
      "description": "It seems there's an issue with the way the messages are serialized in @packages/factory-ts/src/orchestrator.ts , the display is in @src/renderer/components/agents/ChatConversation.tsx",
      "plan": "",
      "context": [
        "packages/factory-ts/src/orchestrator.ts",
        "src/renderer/components/agents/ChatConversation.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "306733d4-26cb-49c0-a0ff-c34dc7699baa",
      "status": "+",
      "title": "Shortcuts in the app were disabled because they interfered with typing in the \"/\" character",
      "description": "A user must be able to specify which key is the modifier key in settings - @src/renderer/screens/SettingsView.tsx . Bring back the shortcuts - @src/renderer/App.tsx",
      "plan": "",
      "context": [
        "src/renderer/screens/SettingsView.tsx",
        "src/renderer/App.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "5e9f9a8e-0a8b-44d3-936d-05ca62f981f6",
      "status": "+",
      "title": "When no features are in a task - the default agent type is \"speccer\"",
      "description": "This should be true no matter where it is run from, right now it's only via @src/renderer/components/tasks/RunAgentButton.tsx",
      "plan": "",
      "context": [
        "src/renderer/components/tasks/RunAgentButton.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "f9eef18e-818e-427d-82ab-8d990bb199c4",
      "status": "-",
      "title": "This feature is index 1 - we should have a special quick command wherever in the app for adding a feature to this task only",
      "description": "",
      "plan": "",
      "context": [],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "df22d856-9aa3-4c10-9e91-04291697e0b8",
      "status": "-",
      "title": "Notifications should fire when an agent finishes work",
      "description": "Also when a feature is completed (i.e. a commit is made).\nThe @src/renderer/services/notificationsService.ts is responsible as well @src/notifications/manager.js    \n\nThese should be toggle'able in @src/renderer/screens/SettingsView.tsx",
      "plan": "",
      "context": [
        "src/renderer/screens/SettingsView.tsx",
        "src/renderer/services/notificationsService.ts",
        "src/notifications/manager.js"
      ],
      "acceptance": [],
      "blockers": []
    }
  ],
  "featureIdToDisplayIndex": {
    "27156e19-3aeb-41de-adc2-75b1c7ca9774": 1,
    "0964b90b-396a-43b0-9f4a-a60d0034360e": 2,
    "56b114e3-daee-481b-9c33-329c8eace503": 3,
    "ba3e0af6-3a04-4523-90c7-b90b0d37514b": 4,
    "98c76bd6-8c5c-4aaf-a778-54f5f57f679a": 5,
    "4df75808-637f-4841-9d31-b8630b1ac8bf": 6,
    "8ed1e913-44e2-4321-a631-f1c2c9033177": 7,
    "a480aa54-f697-409d-95a7-1b369c3da9ff": 8,
    "b2ad0ce4-b71a-40bc-baa7-3550153bef88": 9,
    "0ce98597-907f-4bdf-a5a8-c8e8b253e612": 10,
    "3a11fceb-bb37-4570-a159-2f39622ca364": 11,
    "c2192f2a-9151-4615-b376-986bb0540042": 12,
    "f46696d7-3eee-4f9d-8aee-9419dcee20c9": 13,
    "67edb097-edf3-4988-939d-30e3fc3007c1": 14,
    "493c32f2-94ab-4677-8cc4-a776249c91e5": 15,
    "e9e526e8-576a-448b-9359-db97475db485": 16,
    "abefc7ba-3098-4aee-a01b-694a5a2a9d43": 17,
    "22793b7c-0bfa-4da4-8b3a-ae07fbe2a0ce": 18,
    "d8361748-2f05-4cd4-bb35-80f40db0ff32": 19,
    "bbc90ba1-4348-4a17-9921-18b6c0ece863": 20,
    "6e24f575-cf4d-451f-994f-7190d45ebaaa": 21,
    "894453ef-c700-4128-b714-4ec94498498c": 22,
    "d5b4852d-df73-4818-8db0-f7d6954c0108": 23,
    "b8d93d1d-5c66-4628-8a85-9da0197e97e2": 24,
    "9244467b-e3d1-475a-a1f0-bf35d8482629": 25,
    "352e49dd-37f2-428c-a85c-da7a2c1bd66a": 26,
    "37730047-f692-48c0-b6e7-9093564596a9": 27,
    "0fea71a8-c0da-48a1-b4ea-c0db2196c902": 28,
    "d05e6082-c27c-487f-bacd-837f7f5b7f73": 29,
    "2d607668-7481-4d8f-89cc-5afebb89e67b": 30,
    "5fcbee8a-2734-4fa5-b404-6d9155a01053": 31,
    "76ff2065-cd03-4815-b36b-8dfabd278b2b": 32,
    "7dd2e06b-32aa-418b-9e32-5efc0ecd94dd": 33,
    "46fbca0c-0fd5-4b92-aeae-5e8488cfd192": 34,
    "5f2a9d3e-dfa3-4e79-ba0b-8b2252556681": 35,
    "274eb915-a7b3-4eed-b71d-e7888f1340fb": 36,
    "26d01bef-ce79-498a-9cc8-7a6ada530002": 37,
    "6a8066ee-230f-4f31-b531-3d8cadff4178": 38,
    "57988106-364d-4e52-8b50-94d18839c319": 39,
    "82b9481c-7129-4bea-8029-0e41a56531fe": 40,
    "dc067730-dede-40a5-affe-e04410170819": 41,
    "5f13e562-bbd6-4f67-97c9-00ba79ddb138": 42,
    "fd101477-cb98-4d87-90c4-efb87f39c5e6": 43,
    "e3d6999d-3dcd-4f28-8452-77daa5b9cab2": 44,
    "306733d4-26cb-49c0-a0ff-c34dc7699baa": 45,
    "5e9f9a8e-0a8b-44d3-936d-05ca62f981f6": 46,
    "f9eef18e-818e-427d-82ab-8d990bb199c4": 47,
    "df22d856-9aa3-4c10-9e91-04291697e0b8": 48
  }
}