{
  "id": "ffc07e5a-e89d-4094-958a-90f9e5a4d67d",
  "status": "+",
  "title": "Integrate the factory-ts package",
  "description": "A local package was created that is currently placed in `packages/factory-ts` relative to this project.\nThis package allows calling agents to run on specific projects, tasks and features. It needs to be integrated into this project so agents can be ran on specific tasks or features and agent performance can be monitored. This whole package was based on 4 python scripts that are palced under packages/factory-ts/blueprint",
  "features": [
    {
      "id": "3cd73d96-21d0-488c-a484-2ed49a70032d",
      "status": "+",
      "title": "Add the local 'factory-ts' package into this project",
      "description": "The package is located at `packages/factory-ts`\nThe factor-ts documentation is\n@packages/factory-ts/FACTORY_TS_OVERVIEW.md whereas the configuration documantion is: @packages/factory-ts/CONFIGURATION.md",
      "plan": "",
      "context": [
        "packages/factory-ts",
        "packages/factory-ts/FACTORY_TS_OVERVIEW.md",
        "packages/factory-ts/CONFIGURATION.md"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "dbf85f17-a547-46fd-b4ce-12bb9e006ccb",
      "status": "+",
      "title": "factory-ts orchestrator needs to mirror original python script",
      "description": "@orchestrator.ts should do EXACTLY the same as is the orchestrator flow inside run_local_agent.py\nIt must allow running agents on tasks or a task's specific feature until done or blocked.\nGo over run_local_agent.py and make sure the functionality is mirrored exactly inside @orchestrator.ts",
      "plan": "",
      "context": [
        "packages/factory-ts/blueprint/git_manager.py",
        "packages/factory-ts/blueprint/task_utils.py",
        "packages/factory-ts/blueprint/run_local_agent.py",
        "packages/factory-ts/src/orchestrator.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "20b01258-fc70-4a0a-913d-74ff1ca24dc6",
      "status": "+",
      "title": "factory-ts @orchestrator.ts needs an implementation of a git manager",
      "description": "@orchestrator.ts is mirroring run_local_agent.py - which uses git_manager.py\nThe equivalent to git_manager.py needs to also exist inside factory-ts so that @orchestrator.ts can use it.",
      "plan": "",
      "context": [
        "packages/factory-ts/src/orchestrator.ts",
        "packages/factory-ts/blueprint/git_manager.py",
        "packages/factory-ts/blueprint/run_local_agent.py"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "a46e12c6-1d72-4ab3-8301-b278b56b5814",
      "status": "+",
      "title": "factory-ts @orchestrator.ts needs an implementation of a `CompletionClient`",
      "description": "@orchestrator.ts is mirroring @run_local_agent.py - which uses a library `litellm` to communicate with LLMs.\nThe @orchestrator.ts should be a self-contained library - just like @run_local_agent.py was. If the correct configuration is passed to it, it should run the LLM conversations. Thus, it requires an equivalent of `litellm` locally to run.",
      "plan": "",
      "context": [
        "packages/factory-ts/blueprint/run_local_agent.py",
        "packages/factory-ts/src/orchestrator.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "bce3592f-e8e3-440c-9675-acff8965f3d8",
      "status": "+",
      "title": "factory-ts is the source of truth when it comes to types for ProjectSpec, Feature and Task",
      "description": "Integrate the relevant types inside @types.ts from factory-ts , meaning that 'src/types/tasks.ts' is no longer needed. All places where they were used must be updated.",
      "plan": "",
      "context": [
        "src/types/tasks.ts",
        "packages/factory-ts/src/types.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "89144d73-7cdd-4984-9422-2341c2ed77b5",
      "status": "+",
      "title": "Integrate the new @orchestrator.ts (inside factory-ts) with @mainOrchestrator.ts",
      "description": "We need to be able to run agents using the new @orchestrator.ts .\nThat file is based on @run_local_agent.pywhich was part of a python project.\nLook at @orchestrator.ts - iron out any inconsistencies with regards to @run_local_agent.py and make sure it is possible to call it all properly from within @mainOrchestrator.js .",
      "plan": "",
      "context": [
        "packages/factory-ts/src/orchestrator.ts",
        "src/tools/factory/mainOrchestrator.js",
        "packages/factory-ts/blueprint/run_local_agent.py",
        "packages/factory-ts/src/taskUtils.ts",
        "packages/factory-ts/src/git/gitManager.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "2f441c51-532f-494b-b29b-ae9920a75750",
      "status": "+",
      "title": "the new @orchestrator.ts needs to gather statistics that is displayed to the user",
      "description": "Right now when looking at the \"All Agents\" (@AllAgentsView.tsx) or \"Agents\" (@AgentsView.tsx) tabs no performance information is  shown.",
      "plan": "",
      "context": [
        "packages/factory-ts/src/orchestrator.ts",
        "src/tools/factory/mainOrchestrator.js",
        "src/renderer/screens/AgentsView.tsx",
        "src/renderer/screens/AllAgentsView.tsx"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "92caffb1-e207-4cb0-a774-0e69e8d719ea",
      "status": "+",
      "title": "The @orchestrator.ts should use the @logger.ts to be able to limit the number of data in the console",
      "description": "There's a lot of meta information sent in a conversation with an LLM - that needs to be recorded and stored but in the console we just need the most relevant information:\n- llm's 'thoughts'\n- llm's tool calls \n- time it took to respond\n\nUpdate @logger.ts to be able to be configurable for factory-ts .\nWe want to be able to have an admin (running in dev mode) set these configs later.",
      "plan": "",
      "context": [
        "packages/factory-ts/src/types.ts",
        "packages/factory-ts/src/orchestrator.ts",
        "packages/factory-ts/src/taskUtils.ts",
        "packages/factory-ts/src/logger.ts"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "94a8ab44-a4d9-4165-bd1e-fe2c3c2217e2",
      "status": "+",
      "title": "When running an agent - it stops showing as running after some time",
      "description": "The agent is still running and working, but it stops showing anywhere in the UI",
      "plan": "",
      "context": [],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "8eec6280-97ff-443c-a7a9-fcbb58eeb119",
      "status": "+",
      "title": "@orchestrator.ts needs to also mimic @run.py",
      "description": "@orchestrator.ts is based on the python script  @run.py and @run_local_agent.py, in which before the agent is run - the whole project is copied to a separate temporary directory, the agent runs the conversation and does changes - appropriate git commands happen - and then once it's finished the temporary directory is cleaned up. This is to ensure that the local project copy isn't affected and that the agent runs in an isolated environment.",
      "plan": "",
      "context": [
        "packages/factory-ts/src/orchestrator.ts",
        "packages/factory-ts/blueprint/run.py",
        "packages/factory-ts/blueprint/run_local_agent.py"
      ],
      "acceptance": [],
      "blockers": []
    },
    {
      "id": "0c4a2db2-adcf-4778-bc92-c943664ce450",
      "status": "+",
      "title": "When looking at an agent inside @AgentsView.tsx it must be possible to view the whole conversation",
      "description": "Whether for historical runs or a current run - a given agent's run view must display the running conversation.",
      "plan": "",
      "context": [
        "src/renderer/screens/AgentsView.tsx",
        "packages/factory-ts/src/orchestrator.ts"
      ],
      "acceptance": [],
      "blockers": []
    }
  ],
  "featureIdToDisplayIndex": {
    "3cd73d96-21d0-488c-a484-2ed49a70032d": 1,
    "dbf85f17-a547-46fd-b4ce-12bb9e006ccb": 2,
    "20b01258-fc70-4a0a-913d-74ff1ca24dc6": 3,
    "a46e12c6-1d72-4ab3-8301-b278b56b5814": 4,
    "89144d73-7cdd-4984-9422-2341c2ed77b5": 5,
    "92caffb1-e207-4cb0-a774-0e69e8d719ea": 6,
    "bce3592f-e8e3-440c-9675-acff8965f3d8": 7,
    "2f441c51-532f-494b-b29b-ae9920a75750": 8,
    "94a8ab44-a4d9-4165-bd1e-fe2c3c2217e2": 9,
    "8eec6280-97ff-443c-a7a9-fcbb58eeb119": 10,
    "0c4a2db2-adcf-4778-bc92-c943664ce450": 11
  }
}