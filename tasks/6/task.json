{
  "id": 6,
  "status": "-",
  "title": "Cross-platform packaging configuration with a CI pipeline for build and release",
  "description": "Configure electron-builder to produce distributables for macOS (dmg), Windows (nsis), and Linux (AppImage). Include app icons and code signing placeholders",
  "features": [
    {
      "id": "6.1",
      "status": "+",
      "title": "Install electron-builder dependency",
      "description": "Add electron-builder as a devDependency in package.json and install it using npm. This enables packaging capabilities for the Electron app.",
      "plan": "",
      "context": [],
      "acceptance": []
    },
    {
      "id": "6.2",
      "status": "?",
      "title": "Configure basic electron-builder settings",
      "description": "Add a 'build' section in package.json with basic configurations such as appId, productName, directories (output, buildResources), and files to include in the build.",
      "plan": "",
      "context": [],
      "acceptance": [],
      "rejection": "Blocked: Agent loop failed: Extra data: line 14 column 1 (char 583)"
    },
    {
      "id": "6.3",
      "status": "+",
      "title": "Configure macOS DMG packaging",
      "description": "In the build configuration, add mac-specific settings including target 'dmg', icon path (icns), and any necessary entitlements or artifacts.",
      "plan": "",
      "context": [],
      "acceptance": []
    },
    {
      "id": "6.4",
      "status": "+",
      "title": "Configure Windows NSIS packaging",
      "description": "In the build configuration, add win-specific settings including target 'nsis', icon path (ico), and installer options like one-click installation.",
      "plan": "",
      "context": [],
      "acceptance": []
    },
    {
      "id": "6.5",
      "status": "+",
      "title": "Configure Linux AppImage packaging",
      "description": "In the build configuration, add linux-specific settings including target 'appimage', icon path (png), and desktop entry details.",
      "plan": "",
      "context": [],
      "acceptance": []
    },
    {
      "id": "6.6",
      "status": "+",
      "title": "Add app icons for all platforms",
      "description": "Create or add placeholder icon files (icon.icns for macOS, icon.ico for Windows, icon.png for Linux) in a build resources directory (e.g., build/), and reference them in the build configuration.",
      "plan": "",
      "context": [],
      "acceptance": []
    },
    {
      "id": "6.7",
      "status": "-",
      "title": "Add code signing placeholders",
      "description": "In the build configuration, add placeholders for code signing, such as CSC_LINK and CSC_KEY_PASSWORD environment variables for macOS and Windows, with documentation on how to set them for production builds.",
      "plan": "",
      "context": [],
      "acceptance": []
    },
    {
      "id": "6.8",
      "status": "-",
      "title": "Set up CI pipeline for building distributables",
      "description": "Create a GitHub Actions workflow file (.github/workflows/build.yml) that runs on push to main, installs dependencies, builds the app for all platforms using electron-builder, and archives the artifacts.",
      "plan": "",
      "context": [],
      "acceptance": []
    },
    {
      "id": "6.9",
      "status": "-",
      "title": "Configure CI for release on tags",
      "description": "Extend the CI workflow to run on tags (e.g., v*), build the distributables, and automatically create a GitHub release with the built files attached.",
      "plan": "",
      "context": [],
      "acceptance": []
    }
  ]
}