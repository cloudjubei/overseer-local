{
  "id": "c24f7c54-65c9-441b-abf2-2a9c80fac333",
  "status": "?",
  "title": "Calendar view",
  "description": "For each project, based on the tasks and features that were completed - it must be possible to view a timeline of features when they were done in a scrollable timeline view.\nThe user must be able to also define their own labels/nodes to the timeline as extra rows - these need to be stored.\nIt must be also possible to view an overall timeline - that will show all projects and their tasks (rather than features) - so a higher level view.",
  "features": [
    {
      "id": "ce6b03da-c050-49c5-b2f0-41410d9e15cb",
      "status": "+",
      "title": "Implement Data Model and Storage for User-Defined Timeline Labels",
      "description": "Define a new data model (entity) for user-defined timeline labels/nodes. This entity should include fields such as `id: string`, `projectId: string | null` (to associate with a specific project or for a global label), `timestamp: Date`, `label: string`, and `description: string | undefined`. Implement the necessary `add`, `get`, `update`, and `delete` operations for these timeline labels using `thefactory-db`'s entity management within the main process (`src/db/DatabaseManager.ts` or a new dedicated service). Expose these operations via IPC handlers so the renderer process can manage them.",
      "context": [],
      "createdAt": "2025-09-16T13:05:37.982Z",
      "updatedAt": "2025-09-16T15:24:08.476Z",
      "completedAt": "2025-09-16T15:24:08.476Z"
    },
    {
      "id": "1760db6f-b604-4835-af0d-c5fa83630a4c",
      "status": "+",
      "title": "Implement Project-Specific Feature Timeline View",
      "description": "Develop the front-end components and backend data fetching logic for a project-specific timeline view. This feature should:\n1.  Create new IPC handlers (or extend existing ones) in the main process to fetch all completed `Feature` entities for a given `projectId`, ordered by their `completedAt` timestamp.\n2.  Extend the IPC handlers for user-defined timeline labels to fetch labels associated with a specific `projectId` or global labels.\n3.  Implement a `timelineService` in `src/renderer/services/` to consolidate calls for completed features and relevant user-defined labels for a project.\n4.  Develop a new React UI component (e.g., `ProjectTimelineView.tsx` in `src/renderer/screens/` or `src/renderer/components/`) that consumes the `timelineService` data and displays a scrollable timeline of completed features and user-defined labels.",
      "context": [],
      "createdAt": "2025-09-16T13:05:37.982Z",
      "updatedAt": "2025-09-16T15:29:43.292Z",
      "completedAt": "2025-09-16T15:29:43.292Z"
    },
    {
      "id": "1bdd0798-1a1d-4e77-ac25-ecc6c4d202f6",
      "status": "?",
      "title": "Implement Overall Task Timeline View",
      "description": "TODO",
      "context": [],
      "blockers": [],
      "createdAt": "2025-09-16T13:05:37.982Z",
      "updatedAt": "2025-09-16T13:05:37.982Z"
    },
    {
      "id": "db5e244f-b362-438d-9912-4577fa507ef3",
      "status": "+",
      "title": "Add TimeLineView to the sidebar",
      "description": "@src/renderer/screens/ProjectTimelineView.tsx should be added to the @src/renderer/navigation/SidebarView.tsx between LiveData and Notifications.",
      "context": [
        "src/renderer/screens/ProjectTimelineView.tsx",
        "src/renderer/navigation/SidebarView.tsx"
      ],
      "blockers": [],
      "createdAt": "2025-09-16T15:44:40.413Z",
      "updatedAt": "2025-09-16T15:47:52.270Z",
      "completedAt": "2025-09-16T15:47:52.270Z"
    }
  ],
  "featureIdToDisplayIndex": {
    "ce6b03da-c050-49c5-b2f0-41410d9e15cb": 1,
    "1760db6f-b604-4835-af0d-c5fa83630a4c": 2,
    "db5e244f-b362-438d-9912-4577fa507ef3": 3,
    "1bdd0798-1a1d-4e77-ac25-ecc6c4d202f6": 4
  },
  "createdAt": "2025-09-16T13:05:37.982Z",
  "updatedAt": "2025-09-16T15:47:52.270Z"
}