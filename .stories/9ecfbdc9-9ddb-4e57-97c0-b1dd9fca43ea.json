{
  "id": "9ecfbdc9-9ddb-4e57-97c0-b1dd9fca43ea",
  "status": "?",
  "title": "New screen - Tests",
  "description": "factory-tools exposes tooling for running tests and test coverage based on paths.\nWe need a new screen \"Tests\" that will be accessible from the Sidebar (under \"Agents\"). It requires a new icon to be created.\nThe new screen needs to have 2 sections (selectable via tabs):\n1) test results - especially if there are any failures, we want to show the test lines and the code that is responsible for the failure\n2) test coverage - show the latest test coverage in a clear format so the user can read and analyse the data well.\n\nWhile the tests/coverage is running - make sure the user is shown appropriate loaders so the screen doesn't seem stuck.",
  "features": [
    {
      "id": "e92d8ada-b10d-4a75-bbbb-e8ba9907c7d1",
      "status": "+",
      "title": "Create 'Tests' Screen and Add Sidebar Navigation",
      "description": "Create a new screen component for 'Tests'. Add a new navigation entry in the sidebar, including a new icon, to route to this screen. The initial screen should have a basic layout with a title.",
      "context": [],
      "createdAt": "2025-09-22T23:51:23.418Z",
      "updatedAt": "2025-09-23T00:15:26.345Z",
      "completedAt": "2025-09-23T00:15:26.345Z"
    },
    {
      "id": "d05e25fe-33f1-466a-9237-5abbe3ea43ee",
      "status": "+",
      "title": "Implement Tabbed View for Test Results and Coverage",
      "description": "On the 'Tests' screen, implement a tabbed interface with two tabs: 'Test Results' and 'Test Coverage'. The content for each tab will be implemented in subsequent features.",
      "context": [],
      "createdAt": "2025-09-22T23:51:23.420Z",
      "updatedAt": "2025-09-23T00:16:29.818Z",
      "completedAt": "2025-09-23T00:16:29.818Z"
    },
    {
      "id": "72ab35c0-0d17-4aef-adec-88225d64680d",
      "status": "+",
      "title": "Integrate Test Runner and Display Loading State",
      "description": "Integrate the `factory-tools` test runner. Add a 'Run Tests' button to the 'Test Results' tab. When clicked, trigger the test run and display a loading indicator while the tests are in progress. The raw results should be stored in the component's state.",
      "context": [],
      "createdAt": "2025-09-22T23:51:23.421Z",
      "updatedAt": "2025-09-23T00:21:57.247Z",
      "completedAt": "2025-09-23T00:21:57.247Z"
    },
    {
      "id": "7b0d3b50-e90d-4273-a1f1-0927f0f893ff",
      "status": "+",
      "title": "Display Test Results",
      "description": "Parse the test results from the `factory-tools` runner and display them in the 'Test Results' tab. Special attention should be given to formatting failures, showing the failed test, the error message, and a relevant code snippet.",
      "context": [],
      "createdAt": "2025-09-22T23:51:23.422Z",
      "updatedAt": "2025-09-23T00:26:03.680Z",
      "completedAt": "2025-09-23T00:26:03.680Z"
    },
    {
      "id": "a18529eb-24c1-4857-af45-d464ee37de06",
      "status": "+",
      "title": "Integrate Coverage Runner and Display Loading State",
      "description": "Add a 'Run Coverage' button to the 'Test Coverage' tab. When clicked, trigger the coverage run via `factory-tools` and display a loading indicator until the process is complete. The raw coverage data should be stored in the component's state.",
      "context": [],
      "createdAt": "2025-09-22T23:51:23.423Z",
      "updatedAt": "2025-09-23T00:30:48.632Z",
      "completedAt": "2025-09-23T00:30:48.632Z"
    },
    {
      "id": "f0866210-92d5-410e-9d81-c2059e24ee26",
      "status": "+",
      "title": "Display Coverage Report",
      "description": "Parse the coverage data from the `factory-tools` runner and display it in a clear, user-friendly format within the 'Test Coverage' tab. The report should be easy to read and analyze.",
      "context": [],
      "createdAt": "2025-09-22T23:51:23.424Z",
      "updatedAt": "2025-09-23T00:34:29.364Z",
      "completedAt": "2025-09-23T00:34:29.364Z"
    },
    {
      "id": "c28d53e1-1da4-439b-9a55-c2f74b119106",
      "status": "+",
      "title": "FactoryTools updated",
      "description": "@src/factory/FactoryTestsManager.ts  needs to update as 'thefactory-tools' schemas for tests have been updated - they now expose `TestResult` and `CoverageResult`.\nThe changes need to propagate to @src/renderer/screens/TestsView.tsx , via @src/renderer/services/factoryTestsService.ts , so that all the tests and test coverage displays correctly.\nDo not create any new schemas/types - always use the ones provided by 'thefactory-tools'",
      "context": [
        "src/factory/FactoryTestsManager.ts",
        "src/renderer/screens/TestsView.tsx",
        "src/renderer/services/factoryTestsService.ts"
      ],
      "createdAt": "2025-09-23T09:06:35.698Z",
      "updatedAt": "2025-09-23T11:09:50.791Z",
      "blockers": [],
      "completedAt": "2025-09-23T11:09:50.791Z"
    },
    {
      "id": "e67dc4d1-2b22-46bf-9e9e-98c2712af48a",
      "status": "+",
      "title": "TestsView shouldn't require the path to run all the tests",
      "description": "when passing in \".\" as the path - all tests will be ran.\nSame goes for the test coverage.\nThe user shouldn't be given the option to type in the test to run - this should be handled via nice UI.",
      "context": [],
      "createdAt": "2025-09-23T11:55:29.754Z",
      "updatedAt": "2025-09-23T13:37:57.105Z",
      "blockers": [],
      "completedAt": "2025-09-23T13:37:57.105Z"
    },
    {
      "id": "c13680c0-c41b-4119-81e8-957cabc388fa",
      "status": "+",
      "title": "TestCoverage shows untested files",
      "description": "For all badly tested or untested files there needs to be a button that will open up the Create New Feature form for the given project and for a predefined task id that needs to be created if it doesn't exist (that is titled 'TESTING' with the description 'Ongoing Testing improvements'). The feature form must be filled in with some standard Title and description, so the user should ideally just need to hit the \"Create Feature button\". The file to be tested must be correctly referenced in the description - i.e. \"@src/path/file.ts\" and it needs to be added into the context.\nThe Description field should be focused and the caret at the end so the user can add extra info if needed.",
      "context": [],
      "createdAt": "2025-09-23T12:05:34.305Z",
      "updatedAt": "2025-09-23T13:54:28.118Z",
      "completedAt": "2025-09-23T13:54:28.118Z"
    },
    {
      "id": "fb2c5983-344a-4467-91a5-d6c799a98325",
      "status": "+",
      "title": "Store information about tests ran and show it straight away when opening the view",
      "description": "When @src/renderer/screens/TestsView.tsx opens, the user should be shown all tests (available to be pulled from 'thefactory-tools' via @src/factory/FactoryTestsManager.ts ) . If some of the files have changed since when the result for that test was recorded - it is invalidated and shown.\nThe same idea should be done for test coverage.",
      "context": [
        "src/renderer/screens/TestsView.tsx",
        "src/factory/FactoryTestsManager.ts"
      ],
      "createdAt": "2025-09-23T12:08:06.445Z",
      "updatedAt": "2025-09-23T13:25:24.491Z",
      "completedAt": "2025-09-23T13:25:24.491Z"
    },
    {
      "id": "bfdba512-14ae-4bae-b2dc-ff5c4b34c58e",
      "status": "+",
      "title": "TheFactoryTools was updated with new subscribe and list tests functionality",
      "description": "Update @src/factory/FactoryTestsManager.ts , @src/renderer/services/factoryTestsService.ts , @src/preload.js , @src/ipcHandlersKeys.js to include this new API.\nFollow the same exact pattern that @src/stories/StoriesManager.ts does with subscribe and list.",
      "context": [
        "src/renderer/services/factoryTestsService.ts",
        "src/factory/FactoryTestsManager.ts",
        "src/preload.js",
        "src/ipcHandlersKeys.js",
        "src/stories/StoriesManager.ts"
      ],
      "createdAt": "2025-09-23T12:30:47.377Z",
      "updatedAt": "2025-09-23T13:29:52.250Z",
      "completedAt": "2025-09-23T13:29:52.250Z"
    },
    {
      "id": "6f87dd12-0f6a-43c9-9cae-3cc0a5a338f9",
      "status": "+",
      "title": "Abstract away all tests in a TestsContext",
      "description": "Just like there is @src/renderer/contexts/StoriesContext.tsx , we should have an equivalent for tests to make it easy to use them.\n@src/renderer/screens/TestsView.tsx needs to use it instead of directly using @src/renderer/services/factoryTestsService.ts",
      "context": [
        "src/renderer/contexts/StoriesContext.tsx",
        "src/renderer/screens/TestsView.tsx",
        "src/renderer/services/factoryTestsService.ts"
      ],
      "createdAt": "2025-09-23T12:32:19.602Z",
      "updatedAt": "2025-09-23T13:09:30.654Z",
      "completedAt": "2025-09-23T13:09:30.654Z"
    },
    {
      "id": "cc8704ca-976b-418e-8401-0446a1d0e773",
      "status": "+",
      "title": "The current TestsView was assuming single test calls - the 'thefactory-tools' api was updated",
      "description": "The @src/factory/FactoryToolsManager.ts and @src/renderer/services/factoryToolsService.ts were updated to include new apis for running tests and coverages in a directory - which is what we mainly need for @src/renderer/screens/TestsView.tsx . The whole view needs to be updated.",
      "context": [
        "src/factory/FactoryToolsManager.ts",
        "src/renderer/services/factoryToolsService.ts",
        "src/renderer/screens/TestsView.tsx"
      ],
      "createdAt": "2025-09-23T16:13:08.228Z",
      "updatedAt": "2025-09-23T16:17:28.743Z",
      "completedAt": "2025-09-23T16:17:28.743Z"
    },
    {
      "id": "346aaa45-47c8-4325-b166-efc7c4fa245f",
      "status": "?",
      "title": "After having run coverage it isn't saved",
      "description": "After going away from @src/renderer/screens/TestsView.tsx and coming back to the screen - the just ran coverage isn't showing anymore - it should.",
      "context": [
        "src/renderer/screens/TestsView.tsx"
      ],
      "blockers": [],
      "createdAt": "2025-09-23T19:24:57.838Z",
      "updatedAt": "2025-09-23T21:41:17.916Z"
    },
    {
      "id": "f4c9351c-b638-4a4e-accc-6d525f5adb54",
      "status": "+",
      "title": "The styling should follow the same as AgentsView",
      "description": "The style of the tables in @src/renderer/screens/TestsView.tsx should follow the same pattern as in @src/renderer/screens/AgentsView.tsx - the action button should also only show on hover.",
      "context": [
        "src/renderer/screens/TestsView.tsx",
        "src/renderer/screens/AgentsView.tsx"
      ],
      "blockers": [],
      "createdAt": "2025-09-23T19:26:47.518Z",
      "updatedAt": "2025-09-23T22:06:54.663Z",
      "completedAt": "2025-09-23T22:06:54.663Z"
    },
    {
      "id": "7698ec2c-015b-4eef-ab87-a88a2d14e777",
      "status": "+",
      "title": "There's no need for selecting specific tests to rerun",
      "description": "Always only allow rerunning all tests or cover for everything - just like at the beginning when @src/renderer/screens/TestsView.tsx first shows",
      "context": [
        "src/renderer/screens/TestsView.tsx"
      ],
      "blockers": [],
      "createdAt": "2025-09-23T19:28:32.718Z",
      "updatedAt": "2025-09-23T22:03:31.580Z",
      "completedAt": "2025-09-23T22:03:31.580Z"
    },
    {
      "id": "9e72a552-12df-416c-bbed-8e0fb8928aaa",
      "status": "+",
      "title": "If there are no tests (like in this project) show a button in the middle",
      "description": "Show info in the middle and a button that would do a similar thing to \"Improve tests\" in coverage - it will open up the Create Feature form with some predefined info to make tests for everything.\nThe buttons needs to show only in the tests section of @src/renderer/screens/TestsView.tsx",
      "context": [
        "src/renderer/screens/TestsView.tsx"
      ],
      "blockers": [],
      "createdAt": "2025-09-23T19:30:08.682Z",
      "updatedAt": "2025-09-23T22:09:20.156Z",
      "completedAt": "2025-09-23T22:09:20.156Z"
    },
    {
      "id": "2fac1501-456a-41bb-81a1-ca4c9b8c792b",
      "status": "+",
      "title": "When showing uncovered lines - bunch consecutive ones together",
      "description": "So:\n[1,2,3,4,5,8,9,10]\nbecomes:\n\"1-5,8-10\" when displaying",
      "context": [],
      "blockers": [],
      "createdAt": "2025-09-23T20:03:42.963Z",
      "updatedAt": "2025-09-23T22:10:48.634Z",
      "completedAt": "2025-09-23T22:10:48.634Z"
    },
    {
      "id": "47bd596c-fe57-4cd9-a5b8-0b7ef6a4f74e",
      "status": "+",
      "title": "The coverage view needs improving",
      "description": "In @src/renderer/screens/TestsView.tsx the coverage section need to be improved:\n- Statements, Branches, Functions and Lines should all show the percentage value and the percentage bar that currently only Lines show. These should be vertically stacked i.e. the numbers at the top, the bar at the bottom. All of these columns should take up the same exact width.\n- Uncovered lines should only be as wide as the title i.e. \"Uncovered Lines\" .\n- Statements, Branches, Functions and Lines should show the breakdown, total against covered, in a tooltip on hover.\n- Uncovered Lines should show the full lines display in a tooltip on hover.\n- The summary should match its values to the columns for the file by file values. No need for the extra captions/titles.\n- the files should be alphabetically sorted by path.",
      "context": [],
      "blockers": [],
      "createdAt": "2025-09-23T23:13:27.551Z",
      "updatedAt": "2025-09-23T23:18:21.249Z",
      "completedAt": "2025-09-23T23:18:21.249Z"
    },
    {
      "id": "e880756b-5b9e-4cc2-9e25-c6473b0cec1a",
      "status": "+",
      "title": "The tests view needs imrpoving",
      "description": "After running tests in @src/renderer/screens/TestsView.tsx there's a lot of information provided in the data - we should display it all. I.e. all passing tests, all failing tests and all skipped tests.\nSimilarly to how `vitest` displays it in the console.",
      "context": [],
      "blockers": [],
      "createdAt": "2025-09-23T23:13:48.690Z",
      "updatedAt": "2025-09-23T23:23:03.996Z",
      "completedAt": "2025-09-23T23:23:03.996Z"
    },
    {
      "id": "7e682d56-cece-4615-92a0-75658d7ad9f8",
      "status": "+",
      "title": "Improvements in both tab views of TestsView",
      "description": "In @src/renderer/screens/TestsView.tsx the main button of each section needs to be moved to be vertically centered with the Test Results | Test Coverage switch (the last updated info can be to the left of it).\nThe main section of each of the views is the one that is scrollable - not the whole view.",
      "context": [
        "src/renderer/screens/TestsView.tsx"
      ],
      "blockers": [],
      "createdAt": "2025-09-24T00:02:02.614Z",
      "updatedAt": "2025-09-24T00:13:41.603Z",
      "completedAt": "2025-09-24T00:13:41.603Z"
    },
    {
      "id": "488ffc56-b217-411a-b285-4abc37cece2e",
      "status": "+",
      "title": "Coverage view improvements",
      "description": "In @src/renderer/screens/TestsView.tsx the coverage view needs to have its table updated:\n- make the summary be the actual table header - that way when horizontally scrolling the columns are aligned. Keep the column titles and show the percentage + percentage bar under.\n- The Statements, Branches, Functions & Lines columns can all be slightly thinner (to match Statements, as it's the longest word) in width.\n- When hovering over a value that has the percentage and percentage bar, in the tooltip it should show \"VALUE/TOTAL\" not the percentage.\n- The Improve Tests button should turn into a button that shows a double up arrow icon at the top and the word \"Tests\" at the bottom. This new icon needs to be created in @src/renderer/components/ui/Icons.tsx .\n- the table fills up the whole main section - there shouldn't be anything else other than it.",
      "context": [
        "src/renderer/screens/TestsView.tsx",
        "src/renderer/components/ui/Icons.tsx"
      ],
      "blockers": [],
      "createdAt": "2025-09-24T00:06:56.242Z",
      "updatedAt": "2025-09-24T00:20:04.672Z",
      "completedAt": "2025-09-24T00:20:04.672Z"
    },
    {
      "id": "57d6794f-b9cd-4661-afca-8715ae79ceda",
      "status": "-",
      "title": "The cover view needs improving",
      "description": "In @src/renderer/screens/TestsView.tsx the cover view needs the following improvements:\n- make the table fill up the main view, there's no need for this extra text \"Coverage will be collected for all files\".\n- the header should be sticky and the rest of the cell in the table are scrollable vertically, but the whole table scrolls horizontally (with the header).\n- the action button needs to be a bit higher\n- if there's nothing to display in a section, just show nothing and not \"-\".",
      "context": [
        "src/renderer/screens/TestsView.tsx"
      ],
      "blockers": [],
      "createdAt": "2025-09-24T00:27:41.064Z",
      "updatedAt": "2025-09-24T00:27:41.064Z"
    },
    {
      "id": "c9bb9c86-e863-492e-9ca7-faf114083b78",
      "status": "-",
      "title": "FactoryTestsService provides getLastResult and getLastCoverage - they should be used correctly",
      "description": "In @src/renderer/screens/TestsView.tsx the values need to be used to show the last test results and last coverage whenever the projectId changes or whenever the view appears.",
      "context": [
        "src/renderer/screens/TestsView.tsx"
      ],
      "blockers": [],
      "createdAt": "2025-09-24T00:44:47.992Z",
      "updatedAt": "2025-09-24T00:44:47.992Z"
    }
  ],
  "featureIdToDisplayIndex": {
    "e92d8ada-b10d-4a75-bbbb-e8ba9907c7d1": 1,
    "d05e25fe-33f1-466a-9237-5abbe3ea43ee": 2,
    "72ab35c0-0d17-4aef-adec-88225d64680d": 3,
    "7b0d3b50-e90d-4273-a1f1-0927f0f893ff": 4,
    "a18529eb-24c1-4857-af45-d464ee37de06": 5,
    "f0866210-92d5-410e-9d81-c2059e24ee26": 6,
    "c28d53e1-1da4-439b-9a55-c2f74b119106": 7,
    "6f87dd12-0f6a-43c9-9cae-3cc0a5a338f9": 8,
    "fb2c5983-344a-4467-91a5-d6c799a98325": 9,
    "bfdba512-14ae-4bae-b2dc-ff5c4b34c58e": 10,
    "e67dc4d1-2b22-46bf-9e9e-98c2712af48a": 11,
    "c13680c0-c41b-4119-81e8-957cabc388fa": 12,
    "cc8704ca-976b-418e-8401-0446a1d0e773": 13,
    "7698ec2c-015b-4eef-ab87-a88a2d14e777": 14,
    "f4c9351c-b638-4a4e-accc-6d525f5adb54": 15,
    "9e72a552-12df-416c-bbed-8e0fb8928aaa": 16,
    "2fac1501-456a-41bb-81a1-ca4c9b8c792b": 17,
    "47bd596c-fe57-4cd9-a5b8-0b7ef6a4f74e": 18,
    "e880756b-5b9e-4cc2-9e25-c6473b0cec1a": 19,
    "7e682d56-cece-4615-92a0-75658d7ad9f8": 20,
    "488ffc56-b217-411a-b285-4abc37cece2e": 21,
    "346aaa45-47c8-4325-b166-efc7c4fa245f": 22,
    "57d6794f-b9cd-4661-afca-8715ae79ceda": 23,
    "c9bb9c86-e863-492e-9ca7-faf114083b78": 24
  },
  "createdAt": "2025-09-22T23:34:09.482Z",
  "updatedAt": "2025-09-22T23:34:09.482Z"
}